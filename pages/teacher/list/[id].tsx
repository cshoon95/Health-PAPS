import type { NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { TopBar } from "../../../styles/TopBar";
import { Layout } from "../../../styles/Layout";
import styled from "styled-components";
import { useRouter } from "next/router";
import TextField from "@mui/material/TextField";
import { useState, useMemo, useCallback } from "react";

/** 학급 페이지 **/
const Teacher_ClassPage: NextPage = () => {
  const router = useRouter();

  // 렌더링 시범용 학생수
  const studentNumber = 29;

  const [clickedNav, setClickedNav] = useState("PAPS 기록");

  const handleNavBar = useCallback((e: any) => {
    setClickedNav(e.target.innerText);
  }, []);

  const nav = ["PAPS 기록", "가입 요청", "학생 관리"];

  // 학급마다 측정 리스트(paps 리스트)가 달라짐 => 데이터 받아와서 해당 학급 측정 리스트로 렌더링
  const papsList = [
    "윗몸일으키기",
    "악력",
    "제자리멀리뛰기",
    "왕복달리기",
    "BMI",
  ];

  // 번호와 이름으로 구성된 고정된 테이블 => useMemo로 불필요한 리렌더링 방지
  const fixedTable = useMemo(() => {
    return Array(studentNumber)
      .fill(null)
      .map((_, idx): any => {
        return (
          <>
            <tr>
              <td>
                <TextField
                  id="outlined-basic"
                  variant="outlined"
                  size="small"
                  label="번호"
                  InputLabelProps={{
                    style: { fontSize: 12, textAlign: "center" },
                  }}
                  margin="dense"
                  color="success"
                />
              </td>
              <td>
                <TextField
                  id="outlined-basic"
                  variant="outlined"
                  size="small"
                  label="이름"
                  InputLabelProps={{
                    style: { fontSize: 12, textAlign: "center" },
                  }}
                  margin="dense"
                  color="success"
                />
              </td>
            </tr>
          </>
        );
      });
  }, [studentNumber]);

  // PAPS 측정 종목으로 이루어진 동적인 테이블 => useMemo로 불필요한 리렌더링 방지
  const movedTable = useMemo(() => {
    return Array(studentNumber)
      .fill(null)
      .map((_, idx): any => {
        return (
          <>
            <tr>
              {[...papsList].map((el) => {
                return (
                  <>
                    <td>
                      <TextField
                        id="outlined-basic"
                        variant="outlined"
                        size="small"
                        label={el}
                        InputLabelProps={{
                          style: { fontSize: 12, textAlign: "center" },
                        }}
                        margin="dense"
                        color="success"
                      />
                    </td>
                  </>
                );
              })}
            </tr>
          </>
        );
      });
  }, [studentNumber]);

  return (
    <>
      <Head>
        <title>Health-PAPS</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Layout style={{ overflow: "scroll" }}>
        <TopBar>
          <h2>{`${router.query.id} 페이지`}</h2>
        </TopBar>
        <Nav>
          <ul>
            {nav.map((el, idx) => {
              return (
                <li
                  key={idx}
                  className={clickedNav === el ? "selected" : ""}
                  onClick={handleNavBar}
                >
                  {el}
                </li>
              );
            })}
          </ul>
        </Nav>
        <FormContainer>
          <FixedCol>
            <table>
              <th className="num">번호</th>
              <th className="name">이름</th>
              <>{fixedTable}</>
            </table>
          </FixedCol>
          <MovedCol>
            <table>
              <>
                {[...papsList].map((el) => (
                  <th key={el}>{el}</th>
                ))}
              </>
              <>{movedTable}</>
            </table>
          </MovedCol>
        </FormContainer>
        <ButtonBox>
          <Button>저장하기</Button>
          <Button
            style={{
              backgroundColor: "white",
              color: "#66bb6a",
              border: "1px solid #66bb6a",
            }}
          >
            엑셀로 내보내기
          </Button>
        </ButtonBox>
      </Layout>
    </>
  );
};

const Nav = styled.nav`
  width: 100%;
  margin-bottom: 2rem;
  ul {
    display: flex;
    justify-content: space-around;
    padding: 0;
    text-align: center;
  }

  li {
    font-size: 0.9rem;
    width: 100%;
    padding: 0.5rem;
  }

  .selected {
    border-bottom: 3px solid #338a3e;
  }
`;

const FormContainer = styled.form`
  scrollbar-width: none;
  display: flex;
  width: 100%;
  max-width: 1000rem;
  overflow: scroll;
  margin-bottom: 2rem;
`;

const FixedCol = styled.div`
  width: 75%;
  position: sticky;
  left: 0;
  background-color: white;
  z-index: 4;

  th {
    font-size: 0.7rem;
  }

  tr {
    input {
      font-size: 0.8rem;
      text-align: center;
    }
  }

  .num {
    width: 30%;
  }

  .name {
    width: 40%;
  }
`;

const MovedCol = styled.div`
  width: 100%;

  table {
    overflow: scroll;
    width: 300%;
  }

  tr {
    input {
      font-size: 0.8rem;
      text-align: center;
    }
  }

  th {
    font-size: 0.7rem;
    position: sticky;
    top: 0;
  }
`;

const ButtonBox = styled.div`
  display: flex;
  justify-content: center;
  position: fixed;
  bottom: 0;
  z-index: 20;
  width: 100%;
  background-color: white;
  max-width: 40rem;
`;

const Button = styled.button`
  text-align: center;
  border: 0;
  width: 80%;
  font-size: 1rem;
  font-weight: 600;
  background-color: #66bb6a;
  color: white;
  max-width: 50rem;
  padding: 1rem;

  &:hover {
    background-color: #338a3e;
    transition-duration: 0.5s;
  }
`;

export default Teacher_ClassPage;
